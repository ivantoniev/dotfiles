set nocompatible              " be iMproved, required
set encoding=utf-8
syntax enable

filetype off                  " required
set number
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab
set listchars+=space:Â·
set list
set guifont=Monaco:h14
set title
set updatetime=100
set noswapfile
set nobackup
set ruler
set splitbelow
set splitright
set visualbell

call plug#begin('~/.vim/plugged')
Plug 'mhartington/oceanic-next'
Plug 'chriskempson/base16-vim'
Plug 'vim-airline/vim-airline'
Plug 'ayu-theme/ayu-vim'
Plug 'drewtempelmeyer/palenight.vim'
Plug 'tssm/fairyfloss.vim'

Plug 'w0rp/ale'
Plug 'rakr/vim-one'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'
Plug 'scrooloose/nerdTree'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'airblade/vim-gitgutter'
Plug 'thoughtbot/vim-rspec', { 'for': 'ruby' }
Plug 'kchmck/vim-coffee-script'
Plug 'farmergreg/vim-lastplace'
Plug 'kevinhwang91/nvim-ufo'
call plug#end()

"allow grep to search with the-silver-searcher
if executable('ag')
  " Note we extract the column as well as the file and line number
  set grepprg=ag\ --column
  set grepformat=%f:%l:%m
  "let g:ctrlp_user_command = 'ag %s -l -g ""'
endif

if (has("nvim"))
  "For Neovim 0.1.3 and 0.1.4 < https://github.com/neovim/neovim/pull/2198 >
  let $NVIM_TUI_ENABLE_TRUE_COLOR=1
endif
  "For Neovim > 0.1.5 and Vim > patch 7.4.1799 < https://github.com/vim/vim/commit/61be73bb0f965a895bfb064ea3e55476ac175162 >
  "Based on Vim patch 7.4.1770 (`guicolors` option) < https://github.com/vim/vim/commit/8a633e3427b47286869aa4b96f2bfc1fe65b25cd >
  " < https://github.com/neovim/neovim/wiki/Following-HEAD#20160511 >
if (has("termguicolors"))
  set termguicolors
endif
" let base16colorspace=256  " Access colors present in 256 colorspace
" colorscheme base16-hopscotch
" set background=light
colorscheme one

"rspec for vim
map ,r :call RunCurrentSpecFile()<CR>
map ,s :call RunNearestSpec()<CR>
map ,e :call RunLastSpec()<CR>
map ,t :call RunAllSpecs()<CR>

"autoclose brackets
inoremap {<cr> {<cr>}<c-o><s-o>
inoremap [<cr> [<cr>]<c-o><s-o>
inoremap (<cr> (<cr>)<c-o><s-o>

"navigate splits
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

"toggle tree and show file in tree
nmap ,n :NERDTreeFind<CR>
nmap ,m :NERDTreeToggle<CR>

"Autocomplete
imap <S-Tab> <C-P>

"allow searching with ctrlp
let g:cmdp_cmd = 'CtrlP'
"vim rspec use iterm2
let g:rspec_runner = "os_x_iterm2"
"ctrlp to open in new tab
let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<2-LeftMouse>'],
    \ 'AcceptSelection("t")': ['<cr>'],
    \ }

"These are needed so ctrlp works with big nested codebase
let g:ctrlp_max_files=0
let g:ctrlp_max_depth=40
let g:ctrlp_working_path_mode = ''

"ALE gotodef
let g:ale_completion_enabled = 1
